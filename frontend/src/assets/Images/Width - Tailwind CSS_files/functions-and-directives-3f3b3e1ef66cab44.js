(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8827],{39115:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/functions-and-directives",function(){return a(13190)}])},13190:function(n,s,a){"use strict";a.r(s);var e=a(85893),t=a(11151),o=a(72788),p=a(36336),l=a(30196),c=a(64637);let i=o.L,r=p.X_;function u(n){let s=Object.assign({p:"p",a:"a",code:"code",pre:"pre",strong:"strong",hr:"hr"},(0,t.ah)(),n.components),{Heading:a,Editor:o}=s;return o||k("Editor",!0),a||k("Heading",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a,{level:2,id:"directives",children:"Directives"}),"\n",(0,e.jsxs)(s.p,{children:["Directives are custom Tailwind-specific ",(0,e.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule",children:"at-rules"})," you can use in your CSS that offer special functionality for Tailwind CSS projects."]}),"\n",(0,e.jsx)(a,{level:3,id:"tailwind",children:"@tailwind"}),"\n",(0,e.jsxs)(s.p,{children:["Use the ",(0,e.jsx)(s.code,{children:"@tailwind"})," directive to insert Tailwind’s ",(0,e.jsx)(s.code,{children:"base"}),", ",(0,e.jsx)(s.code,{children:"components"}),", ",(0,e.jsx)(s.code,{children:"utilities"})," and ",(0,e.jsx)(s.code,{children:"variants"})," styles into your CSS."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/**\n * This injects Tailwind\'s base styles and any base styles registered by\n * plugins.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n\n<span class="token comment">/**\n * This injects Tailwind\'s component classes and any component classes\n * registered by plugins.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n\n<span class="token comment">/**\n * This injects Tailwind\'s utility classes and any utility classes registered\n * by plugins.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token comment">/**\n * Use this directive to control where Tailwind injects the hover, focus,\n * responsive, dark mode, and other variants of each class.\n *\n * If omitted, Tailwind will append these classes to the very end of\n * your stylesheet by default.\n */</span>\n<span class="token atrule"><span class="token rule">@tailwind</span> variants<span class="token punctuation">;</span></span></code>'}}),"\n",(0,e.jsx)(a,{level:3,id:"layer",children:"@layer"}),"\n",(0,e.jsxs)(s.p,{children:["Use the ",(0,e.jsx)(s.code,{children:"@layer"})," directive to tell Tailwind which “bucket” a set of custom styles belong to. Valid layers are ",(0,e.jsx)(s.code,{children:"base"}),", ",(0,e.jsx)(s.code,{children:"components"}),", and ",(0,e.jsx)(s.code,{children:"utilities"}),"."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@layer</span> base</span> <span class="token punctuation">{</span>\n  <span class="token selector">h1</span> <span class="token punctuation">{</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> text-2<span class="token unit">xl</span><span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">h2</span> <span class="token punctuation">{</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> text-xl<span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@layer</span> components</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> bg-blue-500 <span class="token property">hover</span><span class="token punctuation">:</span>bg-blue-700 text-white font-bold py-2 px-4 rounded<span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.filter-none</span></span> <span class="token punctuation">{</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector"><span class="token class">.filter-grayscale</span></span> <span class="token punctuation">{</span>\n    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token unit">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["Tailwind will automatically move the CSS within any ",(0,e.jsx)(s.code,{children:"@layer"})," directive to the same place as the corresponding ",(0,e.jsx)(s.code,{children:"@tailwind"})," rule, so you don’t have to worry about authoring your CSS in a specific order to avoid specificity issues."]}),"\n",(0,e.jsx)(s.p,{children:"Any custom CSS added to a layer will only be included in the final build if that CSS is actually used in your HTML, just like all of the classes built in to Tailwind by default."}),"\n",(0,e.jsxs)(s.p,{children:["Wrapping any custom CSS with ",(0,e.jsx)(s.code,{children:"@layer"})," also makes it possible to use modifiers with those rules, like ",(0,e.jsx)(s.code,{children:"hover:"})," and ",(0,e.jsx)(s.code,{children:"focus:"})," or responsive modifiers like ",(0,e.jsx)(s.code,{children:"md:"})," and ",(0,e.jsx)(s.code,{children:"lg:"}),"."]}),"\n",(0,e.jsx)(a,{level:3,id:"apply",children:"@apply"}),"\n",(0,e.jsxs)(s.p,{children:["Use ",(0,e.jsx)(s.code,{children:"@apply"})," to inline any existing utility classes into your own custom CSS."]}),"\n",(0,e.jsx)(s.p,{children:"This is useful when you need to write custom CSS (like to override the styles in a third-party library) but still want to work with your design tokens and use the same syntax you’re used to using in your HTML."}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.select2-dropdown</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> rounded-b-lg shadow-md<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.select2-search</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> border border-gray-300 rounded<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n<span class="token selector"><span class="token class">.select2-results__group</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> text-lg font-bold text-gray-900<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["Any rules inlined with ",(0,e.jsx)(s.code,{children:"@apply"})," will have ",(0,e.jsx)(s.code,{children:"!important"})," ",(0,e.jsx)(s.strong,{children:"removed"})," by default to avoid specificity issues:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/* Input */</span>\n<span class="token selector"><span class="token class">.foo</span></span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.bar</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> foo<span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* Output */</span>\n<span class="token selector"><span class="token class">.foo</span></span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.bar</span></span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token color">blue</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["If you’d like to ",(0,e.jsx)(s.code,{children:"@apply"})," an existing class and make it ",(0,e.jsx)(s.code,{children:"!important"}),", simply add ",(0,e.jsx)(s.code,{children:"!important"})," to the end of the declaration:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token comment">/* Input */</span>\n<span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> font-bold py-2 px-4 rounded <span class="token important">!important</span><span class="token punctuation">;</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* Output */</span>\n<span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">700</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">.5</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">.5</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">.25</span><span class="token unit">rem</span> <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"Note that if you’re using Sass/SCSS, you’ll need to use Sass’ interpolation feature to get this to work:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>\n  <span class="token atrule atapply"><span class="token rule">@apply</span> font-bold py-2 px-4 rounded #</span><span class="token punctuation">{</span><span class="token important">!important</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(a,{level:4,id:"using-apply-with-per-component-css",children:"Using @apply with per-component CSS"}),"\n",(0,e.jsxs)(s.p,{children:["Component frameworks like Vue and Svelte support adding per-component styles within a ",(0,e.jsx)(s.code,{children:"<style>"})," block that lives in each component file."]}),"\n",(0,e.jsxs)(s.p,{children:["If you try to ",(0,e.jsx)(s.code,{children:"@apply"})," a custom class you’ve defined in your global CSS in one of these per-component ",(0,e.jsx)(s.code,{children:"<style>"})," blocks, you’ll get an error about the class not existing:"]}),"\n",(0,e.jsx)(o,{filename:"main.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@layer</span> components</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.card</span></span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.<span class="token color">white</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>borderRadius.lg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>spacing.6<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>boxShadow.xl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(o,{filename:"Card.svelte",code:'<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">div</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* Won\'t work because this file and main.css are processed separately */</span>\n    <span class="token atrule atapply"><span class="token rule">@apply</span> card<span class="token punctuation">;</span></span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["This is because under-the-hood, frameworks like Vue and Svelte are processing every single ",(0,e.jsx)(s.code,{children:"<style>"})," block independently, and running your PostCSS plugin chain against each one in isolation."]}),"\n",(0,e.jsxs)(s.p,{children:["That means if you have 10 components that each have a ",(0,e.jsx)(s.code,{children:"<style>"})," block, Tailwind is being run 10 separate times, and each run has zero knowledge about the other runs. Because of this, when you try to ",(0,e.jsx)(s.code,{children:"@apply card"})," in ",(0,e.jsx)(s.code,{children:"Card.svelte"})," it fails, because Tailwind has no idea that the ",(0,e.jsx)(s.code,{children:"card"})," class exists since Svelte processed ",(0,e.jsx)(s.code,{children:"Card.svelte"})," and ",(0,e.jsx)(s.code,{children:"main.css"})," in total isolation from each other."]}),"\n",(0,e.jsxs)(s.p,{children:["The solution to this problem is to define any custom styles you want to ",(0,e.jsx)(s.code,{children:"@apply"})," in your components using the ",(0,e.jsx)(s.a,{href:"/docs/plugins",children:"plugin system"})," instead:"]}),"\n",(0,e.jsx)(o,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> plugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/plugin\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">plugin</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> addComponents<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">addComponents</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string-property property">\'.card\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'colors.white\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'borderRadius.lg\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'spacing.6\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">boxShadow</span><span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'boxShadow.xl\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"This way any file processed by Tailwind that uses this config file will have access to those styles."}),"\n",(0,e.jsxs)(s.p,{children:["Honestly though the best solution is to just not do weird stuff like this at all. Use Tailwind’s utilities directly in your markup the way they are intended to be used, and don’t abuse the ",(0,e.jsx)(s.code,{children:"@apply"})," feature to do things like this and you will have a much better experience."]}),"\n",(0,e.jsx)(a,{level:3,id:"config",children:"@config"}),"\n",(0,e.jsxs)(s.p,{children:["Use the ",(0,e.jsx)(s.code,{children:"@config"})," directive to specify which config file Tailwind should use when compiling that CSS file. This is useful for projects that need to use different configuration files for different CSS entry points."]}),"\n",(0,e.jsxs)(c.E,{children:[(0,e.jsx)(o,{filename:"site.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.site.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>'}),(0,e.jsx)(o,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>'})]}),"\n",(0,e.jsxs)(s.p,{children:["The path you provide to the ",(0,e.jsx)(s.code,{children:"@config"})," directive is relative to that CSS file, and will take precedence over a path defined in your PostCSS configuration or in the Tailwind CLI."]}),"\n",(0,e.jsxs)(s.p,{children:["Note that if you’re using ",(0,e.jsx)(s.code,{children:"postcss-import"}),", your ",(0,e.jsx)(s.code,{children:"@import"})," statements need to come before ",(0,e.jsx)(s.code,{children:"@config"})," for things to work correctly, as ",(0,e.jsx)(s.code,{children:"postcss-import"})," is strict about following the CSS spec which requires ",(0,e.jsx)(s.code,{children:"@import"})," statements to precede any other rules in the file."]}),"\n",(0,e.jsxs)(l.qm,{children:["Don’t put ",(0,e.jsx)("code",{children:"@config"})," before your ",(0,e.jsx)("code",{children:"@import"})," statements"]}),"\n",(0,e.jsx)(o,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/base"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-base.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/components"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-components.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/utilities"</span><span class="token punctuation">;</span></span></code></pre>'}),"\n",(0,e.jsxs)(l.Vw,{children:["Put your ",(0,e.jsx)("code",{children:"@import"})," statements before the ",(0,e.jsx)("code",{children:"@config"})," directive"]}),"\n",(0,e.jsx)(o,{filename:"admin.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/base"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-base.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/components"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"./custom-components.css"</span><span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@import</span> <span class="token string">"tailwindcss/utilities"</span><span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@config</span> <span class="token string">"./tailwind.admin.config.js"</span><span class="token punctuation">;</span></span></code></pre>'}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)(a,{level:2,id:"functions",children:"Functions"}),"\n",(0,e.jsx)(s.p,{children:"Tailwind adds a few custom functions you can use in your CSS to access Tailwind-specific values. These functions are evaluated at build-time, and are replaced by static values in your final CSS."}),"\n",(0,e.jsx)(a,{level:3,id:"theme",children:"theme()"}),"\n",(0,e.jsxs)(s.p,{children:["Use the ",(0,e.jsx)(s.code,{children:"theme()"})," function to access your Tailwind config values using dot notation."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.content-area</span></span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token unit">vh</span> <span class="token operator">-</span> <span class="token function">theme</span><span class="token punctuation">(</span>spacing.12<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["If you need to access a value that contains a dot (like the ",(0,e.jsx)(s.code,{children:"2.5"})," value in the spacing scale), you can use square bracket notation:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.content-area</span></span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token unit">vh</span> <span class="token operator">-</span> <span class="token function">theme</span><span class="token punctuation">(</span>spacing[<span class="token number">2.5</span>]<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["Since Tailwind uses a ",(0,e.jsx)(s.a,{href:"/docs/customizing-colors#color-object-syntax",children:"nested object syntax"})," to define its default color palette, make sure to use dot notation to access the nested colors."]}),"\n",(0,e.jsx)(l.qm,{children:"Don’t use the dash syntax when accessing nested color values"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.blue-500<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(l.Vw,{children:"Use dot notation to access nested color values"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.<span class="token color">blue</span><span class="token number">.500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsxs)(s.p,{children:["To adjust the opacity of a color retrieved with ",(0,e.jsx)(s.code,{children:"theme"}),", use a slash followed by the opacity value you want to use:"]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token selector"><span class="token class">.btn-blue</span></span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">theme</span><span class="token punctuation">(</span>colors.<span class="token color">blue</span><span class="token number">.500</span> <span class="token operator">/</span> <span class="token number">75</span><span class="token unit">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(a,{level:3,id:"screen",children:"screen()"}),"\n",(0,e.jsxs)(s.p,{children:["The ",(0,e.jsx)(s.code,{children:"screen"})," function allows you to create media queries that reference your breakpoints by name instead of duplicating their values in your own CSS."]}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@media</span> <span class="token function">screen</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(s.p,{children:"This will resolve to the underlying screen value at build-time, generating a regular media query that matches specified breakpoint:"}),"\n",(0,e.jsx)(s.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">640</span><span class="token unit">px</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n  <span class="token comment">/* ... */</span>\n<span class="token punctuation">}</span></code>'}})]})}function d(n={}){return(0,e.jsx)(r,Object.assign({},n,{children:(0,e.jsx)(u,n)}))}function k(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=d,d.layoutProps={Layout:i,meta:{title:"Functions & Directives",description:"A reference for the custom functions and directives Tailwind exposes to your CSS."},slug:"functions-and-directives",tableOfContents:[{title:"Directives",slug:"directives",children:[{title:"@tailwind",slug:"tailwind",children:[]},{title:"@layer",slug:"layer",children:[]},{title:"@apply",slug:"apply",children:[{title:"Using @apply with per-component CSS",slug:"using-apply-with-per-component-css"}]},{title:"@config",slug:"config",children:[]}]},{title:"Functions",slug:"functions",children:[{title:"theme()",slug:"theme",children:[]},{title:"screen()",slug:"screen",children:[]}]}]}},64637:function(n,s,a){"use strict";a.d(s,{E:function(){return u}});var e=a(85893),t=a(67294),o=a(59965),p=a(86010),l=a(4493);function c({className:n}){return(0,e.jsx)("div",{className:(0,p.Z)("pointer-events-none absolute inset-0",n)})}function i({children:n,selectedIndex:s,myIndex:a,marker:t}){let l=s===a,i={leading:l?null:s===a-1?"capped":"normal",trailing:l?null:s===a+1?"capped":"normal"};return(0,e.jsxs)(o.OK,{className:(0,p.Z)("flex items-center relative z-10 overflow-hidden px-4 py-1 [&:not(:focus-visible)]:focus:outline-none",l?"text-sky-300":"text-slate-400"),children:[(0,e.jsx)("span",{className:"z-10",children:n}),"close"===t&&(0,e.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,e.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}),"modified"===t&&(0,e.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}),!l&&(0,e.jsx)(c,{className:(0,p.Z)("bg-slate-700/50 border-y border-slate-500/30","capped"===i.leading&&"border-l rounded-tl","capped"===i.trailing&&"border-r rounded-tr")}),"normal"===i.trailing&&(0,e.jsx)(c,{className:"inset-y-px border-r border-slate-200/5 z-20"}),l&&(0,e.jsx)(c,{className:"border-b border-b-sky-300"})]})}let r={plain:({children:n})=>(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-xl shadow-md",children:n}),framed:({children:n,...s})=>(0,e.jsx)(l.RQ,{...s,children:(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-tl-xl shadow-md",children:n})})};function u({children:n,style:s="plain",actions:a,...l}){let[c,u]=(0,t.useState)(0),d=r[s];return(0,e.jsx)(d,{...l,children:(0,e.jsxs)(o.OK.Group,{onChange:u,children:[(0,e.jsxs)("div",{className:"flex",children:[(0,e.jsx)(o.OK.List,{className:"flex text-slate-400 text-xs leading-6 overflow-hidden rounded-tl-xl pt-2",children:n.map((n,s)=>(0,e.jsx)(i,{myIndex:s,selectedIndex:c,children:n.props.filename},n.props.filename))}),(0,e.jsx)("div",{className:"flex-auto flex pt-2 rounded-tr-xl overflow-hidden",children:(0,e.jsx)("div",{className:(0,p.Z)("flex-auto flex justify-end bg-slate-700/50 border-y border-slate-500/30 pr-4",c===n.length-1?"rounded-tl border-l":"")})}),a?(0,e.jsx)("div",{className:"absolute top-2 right-4 h-8 flex",children:a({selectedIndex:c})}):null]}),(0,e.jsx)(o.OK.Panels,{className:"flex overflow-auto",children:n.map(n=>(0,e.jsx)(o.OK.Panel,{className:"flex-none min-w-full p-5 text-sm leading-6 text-slate-50 ligatures-none",...n.props.code?{dangerouslySetInnerHTML:{__html:n.props.code}}:{children:n.props.children}},n.props.filename))})]})})}},30196:function(n,s,a){"use strict";a.d(s,{$o:function(){return p},Vw:function(){return t},qm:function(){return o}});var e=a(85893);function t({children:n}){return(0,e.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,e.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-cyan-500 text-white flex items-center justify-center ring-2 ring-cyan-500 dark:bg-sky-500 dark:ring-sky-500",children:[(0,e.jsx)("svg",{width:"6",height:"4.5",className:"overflow-visible","aria-hidden":"true",children:(0,e.jsx)("path",{d:"M6 0L2 4.5L0 2.5",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,e.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-cyan-500/30 rounded-full dark:bg-sky-400/30"})]}),(0,e.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:n})]})}function o({children:n}){return(0,e.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,e.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-rose-400 text-white flex items-center justify-center ring-2 ring-rose-400 dark:bg-red-400 dark:ring-red-400",children:[(0,e.jsx)("svg",{width:"6",height:"6",className:"overflow-visible","aria-hidden":"true",children:(0,e.jsx)("path",{d:"M0 0L6 6M6 0L0 6",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,e.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-rose-200 rounded-full dark:bg-red-200/25"})]}),(0,e.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:n})]})}function p({children:n}){return(0,e.jsxs)("div",{className:"mt-6 -mb-1 flex space-x-2",children:[(0,e.jsx)("svg",{className:"flex-none w-5 h-5 text-slate-400 dark:text-slate-600",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true",children:(0,e.jsx)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"})}),(0,e.jsx)("p",{className:"m-0 text-slate-700 text-sm font-medium dark:text-slate-200",children:n})]})}},72788:function(n,s,a){"use strict";a.d(s,{L:function(){return l}});var e=a(85893),t=a(97903),o=a(77929),p=a(87308);function l(n){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(o.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:p.u,...n})]})}l.nav=p.u},59965:function(n,s,a){"use strict";a.d(s,{OK:function(){return F}});var e,t,o,p=a(63370),l=a(18419),c=a(67294),i=a(63766),r=a(73781),u=a(16723),d=a(3855),k=a(14157),h=a(23784),m=a(14879),g=a(46045);function f({onFocus:n}){let[s,a]=(0,c.useState)(!0),e=(0,m.t)();return s?c.createElement(g._,{as:"button",type:"button",features:g.x.Focusable,onFocus:s=>{s.preventDefault();let t,o=50;t=requestAnimationFrame(function s(){if(o--<=0){t&&cancelAnimationFrame(t);return}if(n()){if(cancelAnimationFrame(t),!e.current)return;a(!1);return}t=requestAnimationFrame(s)})}}):null}var x=a(84575),y=a(32984),b=a(81021),j=a(15466),v=a(12351);let w=c.createContext(null);function T({children:n}){let s=c.useRef({groups:new Map,get(n,s){var a;let e=this.groups.get(n);e||(e=new Map,this.groups.set(n,e));let t=null!=(a=e.get(s))?a:0;return e.set(s,t+1),[Array.from(e.keys()).indexOf(s),function(){let n=e.get(s);n>1?e.set(s,n-1):e.delete(s)}]}});return c.createElement(w.Provider,{value:s},n)}function S(n){let s=c.useContext(w);if(!s)throw Error("You must wrap your component in a <StableCollection>");let a=function(){var n,s,a;let e=null!=(a=null==(s=null==(n=c.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED)?void 0:n.ReactCurrentOwner)?void 0:s.current)?a:null;if(!e)return Symbol();let t=[],o=e;for(;o;)t.push(o.index),o=o.return;return"$."+t.join(".")}(),[e,t]=s.current.get(n,a);return c.useEffect(()=>t,[]),e}var C=a(61363),I=((e=I||{})[e.Forwards=0]="Forwards",e[e.Backwards=1]="Backwards",e),N=((t=N||{})[t.Less=-1]="Less",t[t.Equal=0]="Equal",t[t.Greater=1]="Greater",t),_=((o=_||{})[o.SetSelectedIndex=0]="SetSelectedIndex",o[o.RegisterTab=1]="RegisterTab",o[o.UnregisterTab=2]="UnregisterTab",o[o.RegisterPanel=3]="RegisterPanel",o[o.UnregisterPanel=4]="UnregisterPanel",o);let E={0(n,s){var a;let e=(0,x.z2)(n.tabs,n=>n.current),t=(0,x.z2)(n.panels,n=>n.current),o=e.filter(n=>{var s;return!(null!=(s=n.current)&&s.hasAttribute("disabled"))}),p={...n,tabs:e,panels:t};if(s.index<0||s.index>e.length-1){let a=(0,y.E)(Math.sign(s.index-n.selectedIndex),{[-1]:()=>1,0:()=>(0,y.E)(Math.sign(s.index),{[-1]:()=>0,0:()=>0,1:()=>1}),1:()=>0});if(0===o.length)return p;let t=(0,y.E)(a,{0:()=>e.indexOf(o[0]),1:()=>e.indexOf(o[o.length-1])});return{...p,selectedIndex:-1===t?n.selectedIndex:t}}let l=e.slice(0,s.index),c=[...e.slice(s.index),...l].find(n=>o.includes(n));if(!c)return p;let i=null!=(a=e.indexOf(c))?a:n.selectedIndex;return -1===i&&(i=n.selectedIndex),{...p,selectedIndex:i}},1(n,s){if(n.tabs.includes(s.tab))return n;let a=n.tabs[n.selectedIndex],e=(0,x.z2)([...n.tabs,s.tab],n=>n.current),t=n.selectedIndex;return n.info.current.isControlled||-1===(t=e.indexOf(a))&&(t=n.selectedIndex),{...n,tabs:e,selectedIndex:t}},2:(n,s)=>({...n,tabs:n.tabs.filter(n=>n!==s.tab)}),3:(n,s)=>n.panels.includes(s.panel)?n:{...n,panels:(0,x.z2)([...n.panels,s.panel],n=>n.current)},4:(n,s)=>({...n,panels:n.panels.filter(n=>n!==s.panel)})},P=(0,c.createContext)(null);function L(n){let s=(0,c.useContext)(P);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,L),s}return s}P.displayName="TabsDataContext";let O=(0,c.createContext)(null);function M(n){let s=(0,c.useContext)(O);if(null===s){let s=Error(`<${n} /> is missing a parent <Tab.Group /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(s,M),s}return s}function R(n,s){return(0,y.E)(s.type,E,n,s)}O.displayName="TabsActionsContext";let A=v.VN.RenderStrategy|v.VN.Static,F=Object.assign((0,v.yV)(function(n,s){var a,e;let t=(0,c.useId)(),{id:o=`headlessui-tabs-tab-${t}`,disabled:d=!1,autoFocus:m=!1,...g}=n,{orientation:f,activation:w,selectedIndex:T,tabs:I,panels:N}=L("Tab"),_=M("Tab"),E=L("Tab"),P=(0,c.useRef)(null),O=(0,h.T)(P,s);(0,u.e)(()=>_.registerTab(P),[_,P]);let R=S("tabs"),A=I.indexOf(P);-1===A&&(A=R);let F=A===T,z=(0,r.z)(n=>{var s;let a=n();if(a===x.fE.Success&&"auto"===w){let n=null==(s=(0,j.r)(P))?void 0:s.activeElement,a=E.tabs.findIndex(s=>s.current===n);-1!==a&&_.change(a)}return a}),D=(0,r.z)(n=>{let s=I.map(n=>n.current).filter(Boolean);if(n.key===C.R.Space||n.key===C.R.Enter){n.preventDefault(),n.stopPropagation(),_.change(A);return}switch(n.key){case C.R.Home:case C.R.PageUp:return n.preventDefault(),n.stopPropagation(),z(()=>(0,x.jA)(s,x.TO.First));case C.R.End:case C.R.PageDown:return n.preventDefault(),n.stopPropagation(),z(()=>(0,x.jA)(s,x.TO.Last))}if(z(()=>(0,y.E)(f,{vertical:()=>n.key===C.R.ArrowUp?(0,x.jA)(s,x.TO.Previous|x.TO.WrapAround):n.key===C.R.ArrowDown?(0,x.jA)(s,x.TO.Next|x.TO.WrapAround):x.fE.Error,horizontal:()=>n.key===C.R.ArrowLeft?(0,x.jA)(s,x.TO.Previous|x.TO.WrapAround):n.key===C.R.ArrowRight?(0,x.jA)(s,x.TO.Next|x.TO.WrapAround):x.fE.Error}))===x.fE.Success)return n.preventDefault()}),H=(0,c.useRef)(!1),U=(0,r.z)(()=>{var n;H.current||(H.current=!0,null==(n=P.current)||n.focus({preventScroll:!0}),_.change(A),(0,b.Y)(()=>{H.current=!1}))}),V=(0,r.z)(n=>{n.preventDefault()}),{isFocusVisible:q,focusProps:W}=(0,p.Fx)({autoFocus:m}),{isHovered:G,hoverProps:Y}=(0,l.X)({isDisabled:d}),{pressed:B,pressProps:K}=(0,i.x)({disabled:d}),$=(0,c.useMemo)(()=>({selected:F,hover:G,active:B,focus:q,autofocus:m,disabled:d}),[F,G,q,B,m,d]),Z=(0,v.dG)({ref:O,onKeyDown:D,onMouseDown:V,onClick:U,id:o,role:"tab",type:(0,k.f)(n,P),"aria-controls":null==(e=null==(a=N[A])?void 0:a.current)?void 0:e.id,"aria-selected":F,tabIndex:F?0:-1,disabled:d||void 0,autoFocus:m},W,Y,K);return(0,v.sY)({ourProps:Z,theirProps:g,slot:$,defaultTag:"button",name:"Tabs.Tab"})}),{Group:(0,v.yV)(function(n,s){let{defaultIndex:a=0,vertical:e=!1,manual:t=!1,onChange:o,selectedIndex:p=null,...l}=n,i=e?"vertical":"horizontal",k=t?"manual":"auto",m=null!==p,g=(0,d.E)({isControlled:m}),y=(0,h.T)(s),[b,j]=(0,c.useReducer)(R,{info:g,selectedIndex:null!=p?p:a,tabs:[],panels:[]}),w=(0,c.useMemo)(()=>({selectedIndex:b.selectedIndex}),[b.selectedIndex]),S=(0,d.E)(o||(()=>{})),C=(0,d.E)(b.tabs),I=(0,c.useMemo)(()=>({orientation:i,activation:k,...b}),[i,k,b]),N=(0,r.z)(n=>(j({type:1,tab:n}),()=>j({type:2,tab:n}))),_=(0,r.z)(n=>(j({type:3,panel:n}),()=>j({type:4,panel:n}))),E=(0,r.z)(n=>{L.current!==n&&S.current(n),m||j({type:0,index:n})}),L=(0,d.E)(m?n.selectedIndex:b.selectedIndex),M=(0,c.useMemo)(()=>({registerTab:N,registerPanel:_,change:E}),[]);return(0,u.e)(()=>{j({type:0,index:null!=p?p:a})},[p]),(0,u.e)(()=>{if(void 0===L.current||b.tabs.length<=0)return;let n=(0,x.z2)(b.tabs,n=>n.current);n.some((n,s)=>b.tabs[s]!==n)&&E(n.indexOf(b.tabs[L.current]))}),c.createElement(T,null,c.createElement(O.Provider,{value:M},c.createElement(P.Provider,{value:I},I.tabs.length<=0&&c.createElement(f,{onFocus:()=>{var n,s;for(let a of C.current)if((null==(n=a.current)?void 0:n.tabIndex)===0)return null==(s=a.current)||s.focus(),!0;return!1}}),(0,v.sY)({ourProps:{ref:y},theirProps:l,slot:w,defaultTag:"div",name:"Tabs"}))))}),List:(0,v.yV)(function(n,s){let{orientation:a,selectedIndex:e}=L("Tab.List"),t=(0,h.T)(s),o=(0,c.useMemo)(()=>({selectedIndex:e}),[e]);return(0,v.sY)({ourProps:{ref:t,role:"tablist","aria-orientation":a},theirProps:n,slot:o,defaultTag:"div",name:"Tabs.List"})}),Panels:(0,v.yV)(function(n,s){let{selectedIndex:a}=L("Tab.Panels"),e=(0,h.T)(s),t=(0,c.useMemo)(()=>({selectedIndex:a}),[a]);return(0,v.sY)({ourProps:{ref:e},theirProps:n,slot:t,defaultTag:"div",name:"Tabs.Panels"})}),Panel:(0,v.yV)(function(n,s){var a,e,t,o;let l=(0,c.useId)(),{id:i=`headlessui-tabs-panel-${l}`,tabIndex:r=0,...d}=n,{selectedIndex:k,tabs:m,panels:f}=L("Tab.Panel"),x=M("Tab.Panel"),y=(0,c.useRef)(null),b=(0,h.T)(y,s);(0,u.e)(()=>x.registerPanel(y),[x,y]);let j=S("panels"),w=f.indexOf(y);-1===w&&(w=j);let T=w===k,{isFocusVisible:C,focusProps:I}=(0,p.Fx)(),N=(0,c.useMemo)(()=>({selected:T,focus:C}),[T,C]),_=(0,v.dG)({ref:b,id:i,role:"tabpanel","aria-labelledby":null==(e=null==(a=m[w])?void 0:a.current)?void 0:e.id,tabIndex:T?r:-1},I);return T||null!=(t=d.unmount)&&!t||null!=(o=d.static)&&o?(0,v.sY)({ourProps:_,theirProps:d,slot:N,defaultTag:"div",features:A,visible:T,name:"Tabs.Panel"}):c.createElement(g._,{as:"span","aria-hidden":"true",..._})})})},11151:function(n,s,a){"use strict";a.d(s,{Zo:function(){return l},ah:function(){return o}});var e=a(67294);let t=e.createContext({});function o(n){let s=e.useContext(t);return e.useMemo(()=>"function"==typeof n?n(s):{...s,...n},[s,n])}let p={};function l({components:n,children:s,disableParentContext:a}){let l;return l=a?"function"==typeof n?n({}):n||p:o(n),e.createElement(t.Provider,{value:l},s)}}},function(n){n.O(0,[3430,4150,9495,224,7308,9774,2888,179],function(){return n(n.s=39115)}),_N_E=n.O()}]);